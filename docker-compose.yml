version: '3.8'

# 定義服務
services:
  mongodb: # 定義一個mongodb的服務
    image: mongo:latest # 拉取指定版本的mongo的image
    container_name: ${MONGO_IP} # 設定容器名稱，這個名稱用於容器之間的網絡通信
    restart: always # 配置容器在任何情况下都重新启动，包括容器退出时
    ports:
      - "${MONGO_PORT}:27017" # 主機端口:容器端口
    environment: # 添加賬密
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - ./mongodb_db:/data/db # 引用定義好的卷名:容器中目錄 <也可直接用資料夾路徑：/data/db>

  redis:
    image: redis:latest
    container_name: ${REDIS_IP}
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ./redis_db:/data 

  flask_app:
    env_file:
      - .env  # 指定 .env 文件路径
    build: . # 告訴docker-compose，從當前目錄下找Dockerfile文件構建鏡像
    container_name: ${FLASK_NAME}
    restart: always
    ports:
      - "${FLASK_PORT}:5000" 
    depends_on:
      - mongodb
      - redis
      - milvus
    volumes:
      - .:/app # 主机目录:容器目录，進入到當下的代碼目錄，用點來代替當前路徑就好了，掛在到容器上的/app目錄下


  milvus:
    container_name: milvus
    image: milvusdb/milvus:v2.4.8
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    ports:
      - "19530:19530" # 主服務port,處理客戶端請求和向量搜尋操作
    volumes:
      - ./milvus_data:/var/lib/milvus
    depends_on:
      - "etcd"
      - "minio"

  etcd: # 用於 Milvus 及其他客戶端連接和進行元資料的讀寫操作
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ./etcd_data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
  
  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9000:9000" #主要服務端口,透過此port上傳和下載文件 
      - "9001:9001" # Minio 的 Web 控制台管理端口，用于查看和管理存储资源
    volumes:
      - ./minio_data:/minio_data
    command: minio server /minio_data --console-address ":9001"
